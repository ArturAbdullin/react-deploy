{"version":3,"sources":["components/UI/Card.tsx","components/Expenses/ExpensesFilter.tsx","components/Expenses/ExpenseDate.tsx","components/Expenses/ExpenseItem.tsx","components/Expenses/ExpensesList.tsx","components/Chart/ChartBar.tsx","components/Chart/Chart.tsx","components/Expenses/ExpensesChart.tsx","components/Expenses/Expenses.tsx","components/NewExpense/ExpenseForm.tsx","components/NewExpense/NewExpense.tsx","App.tsx","index.tsx"],"names":["Card","props","classes","className","children","ExpensesFilter","value","selected","onChange","event","undefined","onFilterChange","target","ExpenseDate","month","date","toLocaleString","year","getFullYear","toString","day","ExpenseItem","title","amount","ExpensesList","elements","expenses","map","item","id","length","ChartBar","barFillHeight","maxValue","Math","round","style","height","label","Chart","totalMaximum","dataPoints","reduce","a","c","dataPoint","ExpensesChart","chartDataPoints","expense","getMonth","Number","Expenses","useState","filteredYear","setFilteredYear","filteredExpenses","filter","e","selectedYear","ExpenseForm","newTitle","setNewTitle","newAmount","setNewAmount","newDate","setNewDate","onSubmit","preventDefault","expenseData","Date","onSaveExpenseData","type","required","min","step","max","onClick","onClose","NewExpense","isFormOpen","setIsFormOpen","data","onAddExpense","defaultExpenses","App","setExpenses","prevState","random","ReactDOM","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.31060b7c.chunk.js","sourcesContent":["import React from \"react\";\r\nimport './Card.css';\r\n\r\ninterface CardProps extends React.HTMLAttributes<JSX.Element> {\r\n\r\n}\r\n\r\nfunction Card(props: CardProps):JSX.Element {\r\n  const classes: string = 'card ' + props.className;\r\n  return (\r\n    <div className={classes}>{props.children}</div>\r\n  );\r\n}\r\n\r\nexport default Card;","import React, { ChangeEvent } from \"react\";\r\nimport './ExpensesFilter.css';\r\n\r\ninterface ExpensesFilterProps extends React.HTMLAttributes<JSX.Element> {\r\n  selected?: string,\r\n  onFilterChange?: (year: string) => void\r\n}\r\n\r\nfunction ExpensesFilter(props: ExpensesFilterProps): JSX.Element {\r\n  function filterChangeHandler(event: ChangeEvent<HTMLSelectElement>) {\r\n    if (props.onFilterChange !== undefined) {\r\n      props.onFilterChange(event.target.value);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"expenses-filter\">\r\n      <div className=\"expenses-filter__control\">\r\n        <label>Filter by year</label>\r\n        <select value={props.selected} onChange={filterChangeHandler}>\r\n          <option value=\"2022\">2022</option>\r\n          <option value=\"2021\">2021</option>\r\n          <option value=\"2020\">2020</option>\r\n          <option value=\"2019\">2019</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ExpensesFilter;\r\n","import React from \"react\";\r\nimport \"./ExpenseDate.css\";\r\n\r\ninterface ExpenseDateProps extends React.HTMLAttributes<JSX.Element> {\r\n  date?: Date\r\n}\r\n\r\nfunction ExpenseDate(props: ExpenseDateProps): JSX.Element {\r\n  // if (props.date === undefined) props = { date: new Date() };\r\n  const month: string =\r\n    props.date?.toLocaleString(\"en-US\", {\r\n      month: \"long\",\r\n    }) || \"\";\r\n  const year: string = props.date?.getFullYear().toString() || \"\";\r\n  const day: string =\r\n    props.date?.toLocaleString(\"en-US\", {\r\n      day: \"2-digit\",\r\n    }) || \"\";\r\n\r\n  return (\r\n    <div className=\"expense-date\">\r\n      <div className=\"expense-date__month\">{month}</div>\r\n      <div className=\"expense-date__year\">{year}</div>\r\n      <div className=\"expense-date__day\">{day}</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ExpenseDate;\r\n","import React from \"react\";\r\nimport ExpenseDate from \"./ExpenseDate\";\r\nimport Card from \"../UI/Card\";\r\nimport \"./ExpenseItem.css\";\r\n\r\ninterface ExpenseItemProps extends React.HTMLAttributes<JSX.Element> {\r\n  title?: string;\r\n  amount?: string;\r\n  date?: Date;\r\n}\r\n\r\nfunction ExpenseItem(props: ExpenseItemProps): JSX.Element {\r\n  return (\r\n    <li>\r\n      <Card className=\"expense-item\">\r\n        <ExpenseDate date={props.date} />\r\n        <div className=\"expense-item__description\">\r\n          <h2>{props.title}</h2>\r\n          <div className=\"expense-item__price\">${props.amount}</div>\r\n        </div>\r\n      </Card>\r\n    </li>\r\n  );\r\n}\r\n\r\nexport default ExpenseItem;\r\n","import React from \"react\";\r\n\r\nimport ExpenseItem from \"./ExpenseItem\";\r\nimport { ExpensesProps } from \"./Expenses\";\r\nimport \"./ExpensesList.css\";\r\n\r\nfunction ExpensesList(props: ExpensesProps) {\r\n  let elements: JSX.Element[] = props.expenses.map((item) => {\r\n    return (\r\n      <ExpenseItem\r\n        key={item.id}\r\n        title={item.title}\r\n        amount={item.amount}\r\n        date={item.date}\r\n      />\r\n    );\r\n  });\r\n\r\n  if (elements.length === 0)\r\n    return <h2 className=\"expenses-list__fallback\">Expenses not found.</h2>;\r\n\r\n  return <ul className=\"expenses-list\">{elements}</ul>;\r\n}\r\n\r\nexport default ExpensesList;\r\n","import React from \"react\";\r\n\r\nimport \"./ChartBar.css\";\r\n\r\ninterface ChartBarProps extends React.HTMLAttributes<JSX.Element> {\r\n  key: string | number;\r\n  value: number;\r\n  maxValue: number;\r\n  label: string;\r\n}\r\n\r\nfunction ChartBar(props: ChartBarProps): JSX.Element {\r\n  let barFillHeight = \"0%\";\r\n\r\n  if (props.maxValue > 0) {\r\n    barFillHeight = Math.round((props.value / props.maxValue) * 100).toString() + '%';\r\n  }\r\n\r\n  return (\r\n    <div className=\"chart-bar\">\r\n      <div className=\"chart-bar__inner\">\r\n        <div className=\"chart-bar__fill\" style={{height: barFillHeight}}></div>\r\n      </div>\r\n      <label className=\"chart-bar__label\">{props.label}</label>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ChartBar;\r\n","import React from \"react\";\r\n\r\nimport \"./Chart.css\";\r\n\r\nimport ChartBar from \"./ChartBar\";\r\n\r\ninterface ChartProps extends React.HTMLAttributes<JSX.Element> {\r\n  dataPoints: any[];\r\n}\r\n\r\nfunction Chart(props: ChartProps): JSX.Element {\r\n  const totalMaximum = props.dataPoints.reduce((a, c) => a + c.value, 0);\r\n\r\n  return (\r\n    <div className=\"chart\">\r\n      {props.dataPoints.map((dataPoint) => (\r\n        <ChartBar\r\n          key={dataPoint.label}\r\n          value={dataPoint.value}\r\n          maxValue={totalMaximum}\r\n          label={dataPoint.label}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Chart;\r\n","import React from \"react\";\r\n\r\nimport Chart from \"../Chart/Chart\";\r\nimport { ExpensesProps } from \"./Expenses\";\r\n\r\ninterface ExpensesChartProps extends ExpensesProps {}\r\n\r\nfunction ExpensesChart(props: ExpensesChartProps): JSX.Element {\r\n  const chartDataPoints = [\r\n    { label: \"Jan\", value: 0 },\r\n    { label: \"Feb\", value: 0 },\r\n    { label: \"Mar\", value: 0 },\r\n    { label: \"Apr\", value: 0 },\r\n    { label: \"May\", value: 0 },\r\n    { label: \"Jun\", value: 0 },\r\n    { label: \"Jul\", value: 0 },\r\n    { label: \"Aug\", value: 0 },\r\n    { label: \"Sep\", value: 0 },\r\n    { label: \"Oct\", value: 0 },\r\n    { label: \"Nov\", value: 0 },\r\n    { label: \"Dec\", value: 0 },\r\n  ];\r\n\r\n  for (const expense of props.expenses) {\r\n    const expenseMonth = expense.date?.getMonth() || 0;\r\n    chartDataPoints[expenseMonth].value += Number(expense.amount);\r\n  }\r\n\r\n  return <Chart dataPoints={chartDataPoints} />;\r\n}\r\n\r\nexport default ExpensesChart;\r\n","import React, { useState } from \"react\";\r\n\r\nimport \"./Expenses.css\";\r\n\r\nimport Card from \"../UI/Card\";\r\nimport ExpensesFilter from \"./ExpensesFilter\";\r\nimport ExpensesList from \"./ExpensesList\";\r\nimport ExpensesChart from \"./ExpensesChart\";\r\n\r\ninterface ExpensesProps extends React.HTMLAttributes<JSX.Element> {\r\n  expenses: {\r\n    title?: string;\r\n    date?: Date;\r\n    amount?: string;\r\n    [key: number | string]: any;\r\n  }[];\r\n}\r\n\r\nfunction Expenses(props: ExpensesProps): JSX.Element {\r\n  const [filteredYear, setFilteredYear] = useState(\"2022\");\r\n\r\n  function filterChangeHandler(selectedYear: string) {\r\n    setFilteredYear(selectedYear);\r\n  }\r\n\r\n  const filteredExpenses = props.expenses.filter(\r\n    (e) => e.date?.getFullYear().toString() === filteredYear\r\n  );\r\n\r\n  return (\r\n    <Card className=\"expenses\">\r\n      <ExpensesFilter\r\n        selected={filteredYear}\r\n        onFilterChange={filterChangeHandler}\r\n      />\r\n      <ExpensesChart expenses={filteredExpenses}/>\r\n      <ExpensesList expenses={filteredExpenses} />\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default Expenses;\r\nexport type { ExpensesProps }\r\n","import React, { ChangeEvent, FormEvent, useState } from \"react\";\r\nimport \"./ExpenseForm.css\";\r\n\r\ntype FormSaveData = {\r\n  title: string;\r\n  amount: string;\r\n  date: Date;\r\n};\r\n\r\ninterface ExpenseFormProps extends React.HTMLAttributes<JSX.Element> {\r\n  onSaveExpenseData?: (data: FormSaveData) => void;\r\n  onClose?: () => void;\r\n}\r\n\r\nfunction ExpenseForm(props: ExpenseFormProps): JSX.Element {\r\n  const [newTitle, setNewTitle] = useState(\"\");\r\n  const [newAmount, setNewAmount] = useState(\"\");\r\n  const [newDate, setNewDate] = useState(\"\");\r\n\r\n  // const [userInput, setUserInput] = useState({\r\n  //   newTitle: \"Title\",\r\n  //   newAmount: \"\",\r\n  //   newDate: \"\",\r\n  // });\r\n\r\n  const titleChangeHandler = (event: ChangeEvent<HTMLInputElement>) => {\r\n    // setUserInput((prevState) => {\r\n    //   return {...prevState, newTitle: event.target.value};\r\n    // });\r\n    setNewTitle(event.target.value);\r\n  };\r\n\r\n  const amountChangeHandler = (event: ChangeEvent<HTMLInputElement>) => {\r\n    setNewAmount(event.target.value);\r\n  };\r\n\r\n  const dateChangeHandler = (event: ChangeEvent<HTMLInputElement>) => {\r\n    setNewDate(event.target.value);\r\n  };\r\n\r\n  const submitHandler = (event: FormEvent<HTMLFormElement>) => {\r\n    event.preventDefault();\r\n\r\n    const expenseData: FormSaveData = {\r\n      title: newTitle,\r\n      amount: newAmount,\r\n      date: new Date(newDate),\r\n    };\r\n\r\n    if (props.onSaveExpenseData !== undefined) {\r\n      props.onSaveExpenseData(expenseData);\r\n    }\r\n\r\n    setNewTitle(\"\");\r\n    setNewAmount(\"\");\r\n    setNewDate(\"\");\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={submitHandler}>\r\n      <div className=\"new-expense__controls\">\r\n        <div className=\"new-expense__control\">\r\n          <label>Title</label>\r\n          <input\r\n            value={newTitle}\r\n            type=\"text\"\r\n            onChange={titleChangeHandler}\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"new-expense__control\">\r\n          <label>Amount</label>\r\n          <input\r\n            type=\"number\"\r\n            value={newAmount}\r\n            min={0}\r\n            step={0.01}\r\n            onChange={amountChangeHandler}\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"new-expense__control\">\r\n          <label>Date</label>\r\n          <input\r\n            type=\"date\"\r\n            value={newDate}\r\n            min=\"2019-01-01\"\r\n            max=\"2022-12-31\"\r\n            onChange={dateChangeHandler}\r\n            required\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\"new-expense__actions\">\r\n        <button type=\"button\" onClick={props.onClose}>\r\n          Cancel\r\n        </button>\r\n        <button type=\"submit\">Add Expense</button>\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default ExpenseForm;\r\nexport type { FormSaveData };\r\n","import React, {useState} from \"react\";\r\nimport ExpenseForm, { FormSaveData } from \"./ExpenseForm\";\r\nimport \"./NewExpense.css\";\r\n\r\ninterface NewExpenseProps extends React.HTMLAttributes<JSX.Element> {\r\n  onAddExpense?: (data: FormSaveData) => void;\r\n}\r\n\r\nfunction NewExpense(props: NewExpenseProps): JSX.Element {\r\n  const [isFormOpen, setIsFormOpen] = useState(false);\r\n  function saveExpenseDataHandler(data: FormSaveData) {\r\n    if (props.onAddExpense !== undefined) {\r\n      props.onAddExpense(data);\r\n    }\r\n  }\r\n\r\n  const formOpeningHandler = () => setIsFormOpen(true);\r\n  const formClosingHandler = () => setIsFormOpen(false);\r\n\r\n  return (\r\n    <div className=\"new-expense\">\r\n      {!isFormOpen && <button onClick={formOpeningHandler}>Add New Expense</button>}\r\n      {isFormOpen && <ExpenseForm onSaveExpenseData={saveExpenseDataHandler} onClose={formClosingHandler}/>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NewExpense;\r\n","import React, { useState } from \"react\";\n\nimport Expenses from \"./components/Expenses/Expenses\";\nimport { FormSaveData } from \"./components/NewExpense/ExpenseForm\";\nimport NewExpense from \"./components/NewExpense/NewExpense\";\nimport { Expense } from \"./model\";\n\nimport \"./colors.css\";\n\n\nconst defaultExpenses: Expense[] = [\n  {\n    id: \"e1\",\n    title: \"New TV\",\n    amount: \"799.49\",\n    date: new Date(2022, 2, 12),\n  },\n  {\n    id: \"e2\",\n    title: \"Guitar\",\n    amount: \"1799.49\",\n    date: new Date(2022, 3, 12),\n  }\n];\n\nfunction App() {\n  const [expenses, setExpenses] = useState(defaultExpenses);\n\n  // const elems = [\n  //   React.createElement('h2', {}, \"Let's get started!\"),\n  //   React.createElement(Expenses, {data: expenses})\n  // ]\n\n  // return React.createElement('div', {}, ...elems);\n\n  function onAddExpenseHandler(data: FormSaveData) {\n    // expenses.push({ id: Math.random().toString(), ...data });\n    setExpenses((prevState) => {\n      return [{id: Math.random().toString(), ...data}, ...prevState]\n    })\n  }\n\n  return (\n    <div>\n      <NewExpense onAddExpense={onAddExpenseHandler} />\n      <Expenses expenses={expenses} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport \"./index.css\";\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root') as HTMLElement);\nroot.render(<App />);\n"],"sourceRoot":""}